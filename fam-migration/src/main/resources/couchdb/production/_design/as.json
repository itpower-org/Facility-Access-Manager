{"_id":"_design/as","couchapp":{"usage":{"_list/newest":{"description":"return the element where field 'created' exists and has the highest value as json."},"_list/jobs_of_user_and_feedback":{"provide":["json"],"description":"return a list of jobs where the attribute username is the given username and all documents that have the same jobId (which means including the feedback the user got).","?username=":"username of the user"},"_list/soas":{"provide":["html","json"],"&format":{"=json":{"description":"object with title and created only"},"=html":{"description":"render html output.","&render":{"=overview":{"description":"render a table with created date and title as cols","documentneeds":["_id","created","title"]},"=select":{"&selectid":"= <select id=[selectid]>...</select>","description":"create a select form element","&selectname":"= <select name=[selectname]>...</select>","&extraoptionhtml":"= <select ... [extraoptionhtml]>...</select>","&selectspecialoptions":"= <select ...>[selectspecialoptions]...</select>","documentneeds":["_id","created","title"]}}}},"description":"render terms of usage agreements."},"_list/terms_of_use_pages":{"provide":["html"],"description":"render a table with all agreements."},"_view/all_soa_activation":"@see all + and with type SOA_ACTIVATION and attributes roleId and soaActivePages. Must have at least one active page.","_view/current_soa_activation":"@see all_soa_activation + that are active","_view/all":"all documents with created attribute","_list/of_user":{"provide":["json"],"description":"return a list of docs where the attribute username is the given username.","?username=":"username of the user"},"_view/history_soa_activation":"@see all_soa_activation + that are not active anymore","_view/all_job_data_processing":"@see all + and with type JOB_DATA_PROCESSING","_list/soa_activations":{"provide":["html","json"],"description":"render activations for terms of usage agreements. provide html."},"_list/with_job_id":{"provide":["json"],"?jobId=":"interested in","description":"return a list of jobs where the jobId is the given jobId."},"_view/all_soa":"@see all + and with type SOA","_view/all_job":"@see all + and with type JOB","_list/newest_with_facility_key":{"?faclityKey=":"facility key interested in","description":"the newest document of type JOB_DATA_PROCESSING matching the given facility key as json."}},"signatures":{},"name":"Facility Access Manager","objects":{},"url":"http://www.facility-access-manager.com","manifest":["views/","views/all/","views/all/map.js","views/all_job/","views/all_job/map.js","views/all_job_data_processing/","views/all_job_data_processing/map.js","views/current_soa_activation/","views/current_soa_activation/map.js","views/history_soa_activation/","views/history_soa_activation/map.js","views/all_soa/","views/all_soa/map.js","views/all_soa_activation/","views/all_soa_activation/map.js","views/terms_of_use_pages_history/","views/terms_of_use_pages_history/map.js","views/terms_of_use_pages_active/","views/terms_of_use_pages_active/map.js","lists/","lists/with_job_id.js","lists/of_step_with_job_id.js","lists/soa_activations.js","lists/newest.js","lists/soas.js","lists/newest_with_facility_key.js","lists/terms_of_use_pages.js","lists/of_user.js","lists/jobs_of_user_and_feedback.js","shows/","shows/agreement.js","couchapp.json","validate_doc_update.js"],"description":"Design documents for the Facility Access Manager"},"validate_doc_update":"function (newDoc, oldDoc, userCtx, secObj) {\n\t// \u2193 thanks 2 http://github.com/jchris/couchapp.org 4\n\t// http://github.com/jchris/couchapp.org/blob/master/lib/validate.js\n\t  var v = {};\n\t  \n\t  v.forbidden = function(message) {\n\t\t  log(\"forbidden: \" + message);\n\t    throw({forbidden : message});\n\t  };\n\n\t  v.unauthorized = function(message) {\n\t\t  log(\"unauthorized: \" + message);\n\t    throw({unauthorized : message});\n\t  };\n\n\t  v.assert = function(should, message) {\n\t    if (!should) v.forbidden(message);\n\t  }\n\t  v.require = function() {\n\t\t    for (var i=0; i < arguments.length; i++) {\n\t\t      var field = arguments[i];\n\t\t      message = \"The '\"+field+\"' field is required.\";\n\t\t      if (typeof newDoc[field] == \"undefined\") v.forbidden(message);\n\t\t    };\n\t\t  };\n\t  v.requireAndNotNull = function() {\n\t\t    for (var i=0; i < arguments.length; i++) {\n\t\t      var field = arguments[i];\n\t\t      message = \"The '\"+field+\"' field is required and must not be null.\";\n\t\t      if (typeof newDoc[field] == \"undefined\" || newDoc[field] == null) v.forbidden(message);\n\t\t    };\n\t\t  };\n\t\t// \u2191 thanks 2 http://github.com/jchris/couchapp.org 4\n\t\t// http://github.com/jchris/couchapp.org/blob/master/lib/validate.js\n\t\t  \n\t\t  // now the validation\n\tif (newDoc.type == \"SOA\") {\n\t\tv.require(\"created\");\n\t\tv.requireAndNotNull(\"title\", \"content\");\n\t} else if (newDoc.type == \"SOA_ACTIVATION\") {\n\t\tv.require(\"created\");\n\t\tv.requireAndNotNull(\"roleId\", \"activatedOn\");\n\t\tv.assert(newDoc.activatedOn > 1282199191694); // in future from now\n\t} else if (newDoc.type == \"JOB\") {\n\t\tv.require(\"created\");\n\t\tv.requireAndNotNull(\"step\");\n\t\tv.requireAndNotNull(\"username\");\n\t\tv.requireAndNotNull(\"idJobDataProcessing\");\n\t\tv.requireAndNotNull(\"jobSurvey\");\n\t\tv.requireAndNotNull(\"jobId\");\n\t} else if (newDoc.type == \"JOB_DATA_PROCESSING\") {\n\t\tv.requireAndNotNull(\"created\");\n\t\tv.requireAndNotNull(\"username\");\n\t\tv.requireAndNotNull(\"templates\");\n\t\tv.requireAndNotNull(\"facilityKey\");\n\t} else if(newDoc.type == \"TEST_MOLYBDENUM\") {\n\t} else if(newDoc._deleted == true) {\n\t\tif(oldDoc.type != \"JOB\") {\n\t\t\tv.forbidden(\"cannot delete a \" + oldDoc.type);\n\t\t}\n\t} else {\n\t\tv.forbidden(\"validation fail for \" + JSON.stringify(newDoc));\n\t}\n}","views":{"all":{"map":"function(doc) {\n\tif(doc.created) {\n\t\temit(doc.created, doc);\n\t}\n}"},"current_soa_activation":{"map":"function(doc) {\n\tif(doc.type == \"SOA_ACTIVATION\" && doc.activatedOn && doc.deactivatedOn == null && doc.roleId && doc.soaActivePages && doc.soaActivePages.length > 0) {\n\t\temit(doc.activatedOn, doc);\n\t}\n}"},"all_soa":{"map":"function(doc) {\n\tif(doc.created && doc.type == \"SOA\") {\n\t\temit(doc.created, doc);\n\t}\n}"},"history_soa_activation":{"map":"function(doc) {\n\tif(doc.type == \"SOA_ACTIVATION\" && doc.created && doc.roleId && doc.soaActivePages && doc.soaActivePages.length > 0 && doc.activatedOn && doc.activatedOn > 0 && doc.deactivatedOn && doc.deactivatedOn > doc.activatedOn) {\n\t\temit(doc.created, doc);\n\t}\n}"},"all_job_data_processing":{"map":"function(doc) {\n\tif(doc.created && doc.type == \"JOB_DATA_PROCESSING\") {\n\t\temit(doc.created, doc);\n\t}\n}"},"all_soa_activation":{"map":"function(doc) {\n\tif(doc.type == \"SOA_ACTIVATION\" && doc.created && doc.roleId && doc.soaActivePages && doc.soaActivePages.length > 0) {\n\t\temit(doc.created, doc);\n\t}\n}"},"terms_of_use_pages_history":{"map":"function(doc) {\n\tif(doc.type == \"SOA_ACTIVATION\" && doc.created && doc.roleId && doc.soaActivePages && doc.soaActivePages.length > 0 && doc.activatedOn && doc.activatedOn > 0 && doc.deactivatedOn && doc.deactivatedOn > doc.activatedOn) {\n\t\tvar pageno = 0;\n\t\tfor each(var soaActivePage in doc.soaActivePages) {\n\t\t\tvar termsOfUsePage = new Object();\n\t\t\ttermsOfUsePage.htmlContent = soaActivePage.soaDoc.content ? soaActivePage.soaDoc.content : \"unknown\"; // INTLANG\n\t\t\ttermsOfUsePage.pageno  = pageno;\n\t\t\ttermsOfUsePage.pagetotalno  = doc.soaActivePages.length;\n\t\t\ttermsOfUsePage.activatedOn  = doc.activatedOn;\n\t\t\ttermsOfUsePage.deactivatedOn  = doc.deactivatedOn;\n\t\t\ttermsOfUsePage.title  = soaActivePage.soaDoc.title ? soaActivePage.soaDoc.title : \"unknown\";\n\t\t\ttermsOfUsePage.forcePrinting = soaActivePage.forcePrinting;\n\t\t\ttermsOfUsePage.roleId = doc.roleId;\n\t\t\temit(doc.activatedOn + \"page:\" + pageno, termsOfUsePage);\n\t\t\tpageno++;\n\t\t}\n\t}\n}"},"terms_of_use_pages_active":{"map":"function(doc) {\n\tif(doc.type == \"SOA_ACTIVATION\" && doc.activatedOn && doc.deactivatedOn == null && doc.roleId && doc.soaActivePages && doc.soaActivePages.length > 0) {\n\t\tvar pageno = 0;\n\t\tfor each(var soaActivePage in doc.soaActivePages) {\n\t\t\tvar termsOfUsePage = new Object();\n\t\t\ttermsOfUsePage.htmlContent = soaActivePage.soaDoc.content ? soaActivePage.soaDoc.content : \"unknown\"; // INTLANG\n\t\t\ttermsOfUsePage.pageno  = pageno;\n\t\t\ttermsOfUsePage.pagetotalno  = doc.soaActivePages.length;\n\t\t\ttermsOfUsePage.activatedOn  = doc.activatedOn;\n\t\t\ttermsOfUsePage.deactivatedOn  = doc.deactivatedOn;\n\t\t\ttermsOfUsePage.title  = soaActivePage.soaDoc.title ? soaActivePage.soaDoc.title : \"unknown\";\n\t\t\ttermsOfUsePage.forcePrinting = soaActivePage.forcePrinting;\n\t\t\ttermsOfUsePage.roleId = doc.roleId;\n\t\t\temit(doc.activatedOn + \"page:\" + pageno, termsOfUsePage);\n\t\t\tpageno++;\n\t\t}\n\t}\n}"},"all_job":{"map":"function(doc) {\n\tif(doc.created && doc.type == \"JOB\" && doc.jobSurvey && typeof doc.jobSurvey == typeof {}) {\n\t\temit(doc.created, doc);\n\t}\n}"}},"lists":{"newest":"function(head, req) {\n\tvar result = null;\n\twhile(doc = getRow()) {\n\t\tif(result && doc.value.created && doc.value.created > result.value.created) {\n\t\t\tresult = doc;\n\t\t} else if(!result && doc.value.created) {\n\t\t\tresult = doc;\n\t\t}\n\t}\n\tsend(toJSON(result));\n}","terms_of_use_pages":"function(head, req) {\n\tprovides(\"html\", function() {\n\t\t// \u2196 want table overview html\n\t\tvar result = \"<table class=\\\"standard\\\"><thead><tr><th>Scope</th><th>Activated</th><th>Deactivated</th><th>Agreement</th></tr></thead><tbody>\"; // INTLANG\n\t\tvar page;\n\t\tvar hasRow = false;\n\t\tvar rowCount = 0;\n\t\twhile(page = getRow()) {\n\t\t\t\n\t\t\thasRow = true;\n\t\t\t\n\t\t\tvar date = \"\";\n\t\t\t\n\t\t\tvar scope = page.value.roleId;\n\t\t\t\n\t\t\tvar activated = \"not yet\";\n\t\t\tif(page.value.activatedOn) {\n\t\t\t\tactivated = new Date(page.value.activatedOn).toLocaleString().replace(/ /g, \"&nbsp;\");\n\t\t\t}\n\t\t\t\n\t\t\tvar deactivated = \"not yet\";\n\t\t\tif(page.value.deactivatedOn) {\n\t\t\t\tdeactivated = new Date(page.value.deactivatedOn).toLocaleString().replace(/ /g, \"&nbsp;\");\n\t\t\t}\n\t\t\t\n\t\t\tvar agreement = \"<a target=\\\"_blank\\\" href=\\\"termsofuse.html?f=\"+page.value.pageno+\"&x=\"+scope+\"\\\">Page \" + (page.value.pageno + 1) + \" of \" + page.value.pagetotalno + \"<br />\" + page.value.title + \"</a>\";\n\t\t\tif(page.value.forcePrinting == true) {\n\t\t\t\tagreement += \"<br />Options: <span class=\\\"print\\\"></span>\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tagreement += \"<br />Options: <span class=\\\"none_print\\\"></span>\";\n\t\t\t}\n\t\t\tresult += \"<tr id=\\\"page_\"+page.id+\"\\\" class=\\\"\" + (rowCount++ % 2 == 1 ? \"even\" : \"odd\") + \"\\\">\";\n\t\t\tresult += \"<td id=\\\"page_scope_\"+page.id+\"\\\">\"+scope+\"</td>\";\n\t\t\tresult += \"<td id=\\\"page_activated_\"+page.id+\"\\\"><span style=\\\"display: none;\\\">sort_\"+page.value.activatedOn+\"</span>\"+activated+\"</td>\"\n\t\t\tresult += \"<td id=\\\"page_deactivated_\"+page.id+\"\\\"><span style=\\\"display: none;\\\">sort_\"+page.value.deactivatedOn+\"</span>\"+deactivated+\"</td>\"\n\t\t\tresult += \"<td id=\\\"page_agreements_\"+page.id+\"\\\"><span style=\\\"display: none;\\\">sort_\"+page.value.title+\"</span>\"+agreement+\"</td>\"\n\t\t\tresult += \"</tr>\";\n\t\t}\n\t\tif(hasRow) {\n\t\t\tresult += \"</tbody></table>\";\n\t\t} else {\n\t\t\tresult = \"<div>no entries</div>\"; // INTLANG\n\t\t}\n\t\tsend(result);\n\t});\n}","newest_with_facility_key":"function(head, req) {\n\tvar result = null;\n\twhile( doc = getRow()) {\n\t\tif(doc.value.type == \"JOB_DATA_PROCESSING\" && doc.value.facilityKey != null && doc.value.facilityKey == req.query.facilityKey && (result == null || doc.value.created > result.created)) {\n\t\t\tresult = new Object();\n\t\t\tresult.facilityKey = doc.value.facilityKey;\n\t\t\tresult.created = doc.value.created;\n\t\t\tresult.username = doc.value.username;\n\t\t\tresult.templates = doc.value.templates;\n\t\t\tresult.idJobDataProcessing = doc.value._id;\n\t\t}\n\t}\n\tsend(toJSON(result));\n}","soa_activations":"function(head, req) {\n\tprovides(\"html\", function() {\n\t\t// \u2196 want table overview html\n\t\tvar result = \"<table class=\\\"standard\\\"><thead><tr><th>Scope</th><th>Activated</th><th>Deactivated</th><th>Agreements</th></tr></thead><tbody>\"; // INTLANG\n\t\tvar soa_activation;\n\t\tvar hasRow = false;\n\t\tvar rowCount = 0;\n\t\twhile(soa_activation = getRow()) {\n\t\t\thasRow = true;\n\t\t\t\n\t\t\tvar date = \"\";\n\t\t\t\n\t\t\tvar scope = soa_activation.value.roleId;\n\t\t\t\n\t\t\tvar activated = \"not yet\";\n\t\t\tif(soa_activation.value.activatedOn) {\n\t\t\t\tactivated = new Date(soa_activation.value.activatedOn).toLocaleString();\n\t\t\t}\n\t\t\t\n\t\t\tvar deactivated = \"not yet\";\n\t\t\tif(soa_activation.value.deactivatedOn) {\n\t\t\t\tdeactivated = new Date(soa_activation.value.deactivatedOn).toLocaleString();\n\t\t\t}\n\t\t\t\n\t\t\tvar agreements = \"<ul>\";\n\t\t\t\n\t\t\tif(soa_activation.value.soaActivePages) {\n\t\t\t\tvar i;\n\t\t\t\tfor(i=0; i<soa_activation.value.soaActivePages.length; i++) {\n\t\t\t\t\tagreements += \"<li><a href=\\\"/termsofuse.html?aa=\"+soa_activation.value._id+\"&s=editsoa&f=\"+i+\"\\\">Page \" + (i+1) + \": \" + soa_activation.value.soaActivePages[i].soaDoc.title + \"</a></li>\";\n\t\t\t\t\t// \u2196 @see AsQueryKeys#QUERY_KEY_OF for key \"aa\"\n\t\t\t\t\t// \u2196 @see AsQueryKeys#QUERY_KEY_PAGENO for key \"f\"\n\t\t\t\t}\n\t\t\t} \n\t\t\telse {\n\t\t\t\tagreements = \"no agreement defined\"; // INTLANG\n\t\t\t}\n\t\t\tagreements += \"</ul>\";\n\t\t\t\n\t\t\t\n\t\t\tresult += \"<tr id=\\\"soa_activation_\"+soa_activation.value._id+\"\\\" class=\\\"\" + (rowCount++ % 2 == 1 ? \"even\" : \"odd\") + \"\\\">\";\n\t\t\tresult += \"<td id=\\\"soa_activation_scope_\"+soa_activation.value._id+\"\\\">\"+scope+\"</td>\";\n\t\t\tresult += \"<td id=\\\"soa_activation_activated_\"+soa_activation.value._id+\"\\\"><span style=\\\"display: none;\\\">sort_\"+soa_activation.value.activatedOn+\"</span>\"+activated+\"</td>\"\n\t\t\tresult += \"<td id=\\\"soa_activation_deactivated_\"+soa_activation.value._id+\"\\\"><span style=\\\"display: none;\\\">sort_\"+soa_activation.value.deactivatedOn+\"</span>\"+deactivated+\"</td>\"\n\t\t\tresult += \"<td id=\\\"soa_activation_agreements_\"+soa_activation.value._id+\"\\\">\"+agreements+\"</td>\"\n\t\t\tresult += \"</tr>\";\n\t\t}\n\t\tif(hasRow) {\n\t\t\tresult += \"</tbody></table>\";\n\t\t} else {\n\t\t\tresult = \"<div>no entries</div>\"; // INTLANG\n\t\t}\n\t\tsend(result);\n\t});\n}","of_user":"function(head, req) {\n\tvar results = new Array();\n\tvar doc;\n\twhile( doc = getRow()) {\n\t\tif(doc.value.username == req.query.username) {\n\t\t\tresults.push(doc.value);\n\t\t}\n\t}\n\tsend(toJSON(results));\n}","of_step_with_job_id":"function(head, req) {\n\tvar result = null;\n\twhile( doc = getRow()) {\n\t\tif(doc.value.jobId != null && doc.value.step != null && doc.value.jobId == req.query.jobId && doc.value.step == req.query.step) {\n\t\t\tresult = doc.value;\n\t\t}\n\t}\n\tsend(toJSON(result));\n}","jobs_of_user_and_feedback":"function(head, req) {\n\tvar results = new Array();\n\tvar feedback_candidates = new Array();\n\tvar job_ids = new Array();\n\tvar doc;\n\tvar i=0;\n\tvar j=0;\n\twhile( doc = getRow()) {\n\t\tif(doc.value.jobId != null && doc.value.username == req.query.username) {\n\t\t\tresults.push(doc.value);\n\t\t\tjob_ids.push(doc.value.jobId);\n\t\t}\n\t\tif(doc.value.jobId != null && doc.value.step != null && doc.value.step > 0) {\n\t\t\tfeedback_candidates.push(doc.value);\n\t\t}\n\t}\n\tfor(i=0; i<job_ids.length; i++) {\n\t\tfor(j=0; j<feedback_candidates.length;j++) {\n\t\t\tif(feedback_candidates[j].jobId == job_ids[i]) {\n\t\t\t\tresults.push(feedback_candidates[j]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tsend(toJSON(results));\n}","soas":"function(head, req) {\n\tprovides(\"json\", function() {\n\t\tvar soas = new Array();\n\t\tvar soa;\n\t\twhile(soa = getRow()) {\n\t\t\tvar overviewSoa = new Object();\n\t\t\toverviewSoa.created = soa.value.created; \n\t\t\toverviewSoa.title = soa.value.title; \n\t\t\tsoas.push(overviewSoa);\n\t\t}\n\t\tsend(toJSON(soas));\n\t});\n\tprovides(\"html\", function() {\n\t\tif(req.query.render == 'overview') {\n\t\t\t// \u2196 want table overview html\n\t\t\tvar result = \"<table class=\\\"standard\\\"><thead><tr><th>Created on</th><th>Title</th></tr></thead><tbody>\"; // INTLANG\n\t\t\tvar soa;\n\t\t\tvar hasRow = false;\n\t\t\tvar rowCount = 0;\n\t\t\twhile(soa = getRow()) {\n\t\t\t\tif(soa.value.created && soa.value.title) {\n\t\t\t\t\thasRow = true;\n\t\t\t\t\tvar date = new Date(soa.value.created).toLocaleString(); \n\t\t\t\t\tresult += \"<tr id=\\\"edit_soa_overview_\"+soa.value._id+\"\\\" class=\\\"\" + (rowCount++ % 2 == 1 ? \"even\" : \"odd\") + \"\\\"><td><span style=\\\"display: none;\\\">sort_\"+soa.value.created+\"</span>\"+date+\"</td>\";\n\t\t\t\t\tresult += \"<td><a target=\\\"_blank\\\" href=\\\"singletermsofuseadminview.html?aa=\"+soa.value._id+\"\\\">\"+soa.value.title+\"</a></td></tr>\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(hasRow) {\n\t\t\t\tresult += \"</tbody></table>\";\n\t\t\t} else {\n\t\t\t\tresult = \"<div>no entries</div>\"; // INTLANG\n\t\t\t}\n\t\t\tsend(result);\n\t\t} else if(req.query.render == 'select') {\n\t\t\t// \u2196 want select html\n\n\t\t\t// \u2193 get options\n\t\t\tvar options = new Object();\n\t\t\toptions.selectname = req.query.selectname || \"existing_agreement\";\n\t\t\toptions.selectid = req.query.selectid || \"existing_agreement_id\";\n\t\t\toptions.extraoptionhtml = req.query.extraoptionhtml || \"\";\n\t\t\toptions.selectspecialoptions = \"\";\n\t\t\tif(req.query.selectspecialoptions) {\n\t\t\t\toptions.selectspecialoptions = \" \" + req.query.selectspecialoptions;\n\t\t\t}\n\t\t\t\n\t\t\t// \u2193 generate select\n\t\t\tvar result = \"<select name=\\\"\"+options.selectname+\"\\\" id=\\\"\"+options.selectid+\"\\\"\"+options.selectspecialoptions+\">\";\n\t\t\tresult += options.extraoptionhtml;\n\t\t\twhile(soa = getRow()) {\n\t\t\t\tif(soa.value.created && soa.value.title) {\n\t\t\t\t\tvar date = new Date(soa.value.created).toLocaleString(); \n\t\t\t\t\tresult += \"<option id=\\\"existing_agreement_\"+soa.value._id+\"\\\" value=\\\"existing_agreement_\"+soa.value._id+\"\\\" \\\">\"+soa.value.title+\" (\"+date+\")</option>\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult += \"</select>\";\n\t\t\tsend(result);\n\t\t} else {\n\t\t\t// \u2196 unknown render\n\t\t\t// \u2193 log and show error\n\t\t\tlog(\"[201008161425]\", \"Must be invoked with 'render=?' with one of 'select' or 'overview'. got:\" + req.query.render)\n\t\t\tsend(\"[201008161425] Must be invoked with 'render=?' with one of 'select' or 'overview'. got:\" + toJSON(req.query))\n\t\t}\n\t});\n}","with_job_id":"function(head, req) {\n\tvar result = [];\n\twhile( doc = getRow()) {\n\t\tif(doc.value.jobId != null && doc.value.jobId == req.query.jobId) {\n\t\t\tresult.push(doc.value);\n\t\t}\n\t}\n\tsend(toJSON(result));\n}"},"shows":{"agreement":"function(doc, req) {\n\tprovides(\"html\", function() {\n\t\treturn doc.content;\n\t});\n}"}}
